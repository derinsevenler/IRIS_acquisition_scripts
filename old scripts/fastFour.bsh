// fast 4-color single-position acquisition, with frame averaging.
// the resulting image is saved
import ij.*;

gui.clearMessageWindow();
mmc.stopSequenceAcquisition();
mmc.clearCircularBuffer();
gui.closeAllAcquisitions();

mmc.setExposure(1.0);
String[] channels = new String[4];
channels[0] = "Blue";
channels[1] = "Green";
channels[2] = "Orange";
channels[3] = "Red";

width = (int) mmc.getImageWidth();
height = (int) mmc.getImageHeight();
bytesPerPixel = (int) mmc.getBytesPerPixel();
bitDepth = (int) mmc.getImageBitDepth();

// file locations
rootDirName = "C:/IRISdata";

// Number of frames to average
nrFrames = 16;
nrChannels = 1;
nrSlices = nrPositions = 1;

ImageStack colorStack = new ImageStack((int)width, (int)height, channels.length);
for(int c=0; c<channels.length; c++){
	mmc.setConfig("LEDs", "_Off");
	gui.sleep(10);
	mmc.setConfig("LEDs", channels[c]);

	// create an acquisition of nrFrames
	acqName = gui.getUniqueAcquisitionName("raw");
	gui.openAcquisition(acqName, rootDirName,
   nrFrames, nrChannels, nrSlices, nrPositions,
   /* show */ true,
   /* save */ false);
//   gui.initializeAcquisition(acqName, width, height, bytesPerPixel, bitDepth);
	mmc.startSequenceAcquisition(nrFrames, 0, true);
	frame = 0;
	exposureMs = mmc.getExposure();
	while (mmc.getRemainingImageCount() > 0 || mmc.isSequenceRunning(mmc.getCameraDevice())) {
	   if (mmc.getRemainingImageCount() > 0) {
	      img = mmc.popNextTaggedImage();
	      gui.addImageToAcquisition(acqName, frame, 0, 0, 0, img);
	      frame++;
	      gui.message(""+frame);
	   }
	   else {
	      mmc.sleep(100);
	   }
	   if (frame>=nrFrames){
	   	mmc.stopSequenceAcquisition();
	   }
	}
	mmc.stopSequenceAcquisition();

	// get the average frame and save it out.
	IJ.run("Z Project...", "start=0 stop=" + nrFrames + " projection=[Average Intensity]");
	avgFr = IJ.getImage(); // this is an ImagePlus object
	colorStack.setPixels(avgFr.getProcessor().getPixels(), c+1);
	avgFr.close();
//	https://raw.githubusercontent.com/zindy/micromanager-upstream/master/scripts/sequentialAcq.bsh
	gui.getAcquisition(acqName).promptToSave(false);
	gui.closeAcquisitionWindow(acqName);
}
//ImagePlus colorIms = new ImagePlus("colorImages", colorStack);
//colorIms.show();

IJ.save(colorIms, rootDirName + "/results.tif");


// Mirror Normalization


gui.message("Finished!");
mmc.setConfig("LEDs","_Off");